const time = new Date().getTime();
const user = await eth.signer.getAddress();

// Ask user to "Sign-In" every 24 hours.
const signature = await eth.signer.signTypedData({
  name: "Treasury.SignIn",
  version: "1",
  // localnet 23293
  // testnet 23295
  chainId: 23295,
  verifyingContract: await contract.getAddress()
}, {
  SignIn: [
      { name: 'user', type: "address" },
      { name: 'time', type: 'uint32' },
  ]
}, {
  user,
  time: time
});
const rsv = ethers.Signature.from(signature);
const auth = {user, time, rsv};
// The `auth` variable can then be cached.

// Then in the future, authenticated view calls can be performed by
// passing auth without further user interaction authenticated data.
await contract.authenticatedViewCall(auth, ...args);